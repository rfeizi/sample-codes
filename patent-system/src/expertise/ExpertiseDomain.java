package expertise;

// Generated Jul 31, 2012 6:27:12 AM by Hibernate Tools 4.0.0

import invention.InventionFile;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.ManyToMany;
import javax.persistence.Transient;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;



import user.User;


/**
 * ExpertiseDomain generated by hbm2java
 */
@Entity
@Table(name = "expertise_domain", catalog = "patentsys", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class ExpertiseDomain implements java.io.Serializable {

	private Integer id;
	private String name;
	private Set<InventionFile> inventionFiles = new HashSet<InventionFile>(0);
	private Set<User> experts = new HashSet<User>(0);

	public ExpertiseDomain() {
	}

	public ExpertiseDomain(String name) {
		this.name = name;
	}

	public ExpertiseDomain(String name, Set<InventionFile> inventionFiles,
			Set<User> experts) {
		this.name = name;
		this.inventionFiles = inventionFiles;
		this.experts = experts;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "expertiseDomain")
	public Set<InventionFile> getInventionFiles() {
		return this.inventionFiles;
	}

	public void setInventionFiles(Set<InventionFile> inventionFiles) {
		this.inventionFiles = inventionFiles;
	}

	@ManyToMany(fetch = FetchType.EAGER, mappedBy="expertiseDomains")
	public Set<User> getExperts() {
		return this.experts;
	}
	
	public void setExperts(Set<User> experts) {
		this.experts=experts;
	}


	@Override
	public boolean equals(Object obj) {
		if(!(obj instanceof ExpertiseDomain))
			return false;
		if(((ExpertiseDomain)obj).getId().equals(getId()))
			return true;
		else
			return false;
	}


	@Transient
	public String toString(){
		return getName();
	}

	@Transient
	public void addExpert(User user) {
		this.experts.add(user);
		
	}
	
	
}
